#include <iostream>
#include <stack>
#include <queue>
using namespace std;


void printFromStack(string expr){
    stack<char> myStack;
    for(int i=0; i<expr.length(); i++){
        myStack.push(expr[i]);
    }
    
    cout << "My stack is popped in this order" << endl;
    while(!myStack.empty()){
        cout << myStack.top() << " ";
        myStack.pop();
    }
    cout << endl;
    
}


void printFromQueue(string expr){
    queue<char> myQueue;
    for(int i=0; i<expr.length(); i++){
        myQueue.push(expr[i]);
    }
    
    cout << "My queue is dequeued in this order" << endl;
    while(!myQueue.empty()){
        cout << myQueue.front() << " ";
        myQueue.pop();
    }
    cout << endl;
    
}

bool isPalindrome(string expr){
    queue<char> myQueue;
    stack<char> myStack;
    bool isPalindrome = true;
    
    for(int i=0; i<expr.length(); i++){
        myQueue.push(expr[i]);
        myStack.push(expr[i]);
    }
    
    while (isPalindrome==true && (!myStack.empty() && !myQueue.empty()))
    {
        if (myStack.top() != myQueue.front())
        {
            isPalindrome = false;
        }
        else
        {
            myQueue.pop();
            myStack.pop();
        }
    }
    return isPalindrome;
}

int main(int argc, const char * argv[])
{
    string expression;
    while (expression != "end"){
        cout << "Please enter an expression that you want to store: " << endl;
        cin >> expression;
        
        printFromStack(expression);
        
        printFromQueue(expression);
        
        
        cout << "Your expression: " << expression << " is : " << (isPalindrome(expression)? "a palindrome!": "not a palindrome!")  << endl;
        
        
        
    }
    return 0;
}


